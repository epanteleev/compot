extern void @printIntArrayWithSpaces(ptr, i32)

$struct.Point = type {i32, i32}

define void @swap(%a: ptr, %b: ptr) {
entry:
  %a.addr = alloc ptr
  %b.addr = alloc ptr
  %temp = alloc i32
  store ptr %a.addr, ptr %a
  store ptr %b.addr, ptr %b
  %0 = load ptr %a.addr
  %1 = load i32 %0
  store ptr %temp, i32 %1
  %2 = load ptr %b.addr
  %3 = load i32 %2
  %4 = load ptr %a.addr
  store ptr %4, i32 %3
  %5 = load i32 %temp
  %6 = load ptr %b.addr
  store ptr %6, i32 %5
  ret void
}

define i32 @main() {
entry:
  %p = alloc $struct.Point
  %i = gfp $struct.Point, ptr %p, i32 0
  store ptr %i, i32 5
  %j = gfp $struct.Point, ptr %p, i32 1
  store ptr %j, i32 67
  %i1 = gfp $struct.Point, ptr %p, i32 0
  %j2 = gfp $struct.Point, ptr %p, i32 1
  call void @swap(%i1: ptr, %j2: ptr) br label %cont

cont:
  %start = gep i32, ptr %p, i8 0
  call void @printIntArrayWithSpaces(%start: ptr, 2: i32) br label %end

end:
  ret i32 0
}

