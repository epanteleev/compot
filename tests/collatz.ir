extern void @printInt(i32)

define i32 @collatz(%x: i32) {
entry:
  %retval = alloc i32
  %x.addr = alloc i32
  store ptr %x.addr, i32 %x
  %0 = load i32 %x.addr
  %cmp = icmp eq i32 %0, 1
  br u1 %cmp label %if.then, label %if.end

if.then:
  store ptr %retval, i32 1
  br label %return

if.end:
  %1 = load i32 %x.addr
  %rem = srem i32 %1, 2
  %cmp1 = icmp eq i32 %rem, 0
  br u1 %cmp1 label %if.then2, label %if.end3

if.then2:
  %2 = load i32 %x.addr
  %div = sdiv i32 %2, 2
  %call = call i32 @collatz(i32 noundef %div)
  store ptr %retval, i32 %call
  br label %return

if.end3:
  %3 = load i32 %x.addr
  %rem4 = srem i32 %3, 2
  %cmp5 = icmp eq i32 %rem4, 1
  br u1 %cmp5 label %if.then6, label %if.end8

if.then6:
  %4 = load i32 %x.addr
  %mul = mul i32 3, %4
  %add = add i32 %mul, 1
  %call7 = call i32 @collatz(%add: i32)
  store ptr %retval, i32 %call7
  br label %return

if.end8:
  store ptr %retval, i32 0
  br label %return

return:
  %5 = load i32 %retval
  ret i32 %5
}

define u64 @main() {
entry:
  %1 = call i32 @collatz(123: i32)
  call void @printInt(%1: i32) br label %return

return:
  ret u64 0
}


