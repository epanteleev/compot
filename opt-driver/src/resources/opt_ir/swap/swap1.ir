extern void @printIntArrayWithSpaces(ptr, i32)

define void @swap(%a: ptr, %b: ptr) {
entry:
  %a.addr = alloc ptr
  %b.addr = alloc ptr
  %temp = alloc i32
  store ptr %a.addr, ptr %a
  store ptr %b.addr, ptr %b
  %0 = load ptr %a.addr
  %1 = load i32 %0
  store ptr %temp, i32 %1
  %2 = load ptr %b.addr
  %3 = load i32 %2
  %4 = load ptr %a.addr
  store ptr %4, i32 %3
  %5 = load i32 %temp
  %6 = load ptr %b.addr
  store ptr %6, i32 %5
  ret void
}

define i32 @main() {
entry:
  %retval = alloc i32
  %arr = alloc <i32x10>
  store ptr %retval, i32 0
  %arrayidx = gep i32, ptr %arr, i64 0
  store ptr %arrayidx, i32 4
  %arrayidx1 = gep i32, ptr %arr, i64 1
  store ptr %arrayidx1, i32 2
  %arrayidx2 = gep i32, ptr %arr, i64 2
  store ptr %arrayidx2, i32 0
  %arrayidx3 = gep i32, ptr %arr, i64 3
  store ptr %arrayidx3, i32 9
  %arrayidx4 = gep i32, ptr %arr, i64 4
  store ptr %arrayidx4, i32 90
  %arrayidx5 = gep i32, ptr %arr, i64 5
  store ptr %arrayidx5, i32 45
  %arrayidx6 = gep i32, ptr %arr, i64 6
  store ptr %arrayidx6, i32 55
  %arrayidx7 = gep i32, ptr %arr, i64 7
  store ptr %arrayidx7, i32 89
  %arrayidx8 = gep i32, ptr %arr, i64 8
  store ptr %arrayidx8, i32 4
  %arrayidx9 = gep i32, ptr %arr, i64 9
  store ptr %arrayidx9, i32 23

  %v0 = gep i32, ptr %arr, i64 8
  %v1 = gep i32, ptr %arr, i64 9
  call void @swap(%v0: ptr, %v1: ptr) br label %cont

cont:
  call void @printIntArrayWithSpaces(%arrayidx: ptr, 10: i32) br label %end

end:
  ret i32 0
}

