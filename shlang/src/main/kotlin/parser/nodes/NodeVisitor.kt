package parser.nodes


interface NodeVisitor {
    fun visit(node: DummyNode)
    fun visit(binop: BinaryOp)
    fun visit(pointer: Pointer)
    fun visit(node: IdentNode)
    fun visit(cast: Cast)
    fun visit(arrayAccess: ArrayAccess)
    fun visit(unaryOp: UnaryOp)
    fun visit(sizeOf: SizeOf)
    fun visit(stringNode: StringNode)
    fun visit(numNode: NumNode)
    fun visit(switchStatement: SwitchStatement)
    fun visit(declarator: Declarator)
    fun visit(declaration: Declaration)
    fun visit(pointers: Pointers)
    fun visit(returnStatement: ReturnStatement)
    fun visit(ifStatement: IfStatement)
    fun visit(whileStatement: WhileStatement)
    fun visit(forStatement: ForStatement)
    fun visit(doWhileStatement: DoWhileStatement)
    fun visit(caseStatement: CaseStatement)
    fun visit(defaultStatement: DefaultStatement)
    fun visit(breakStatement: BreakStatement)
    fun visit(continueStatement: ContinueStatement)
    fun visit(gotoStatement: GotoStatement)
    fun visit(labeledStatement: LabeledStatement)
    fun visit(emptyStatement: EmptyStatement)
    fun visit(compoundStatement: CompoundStatement)
    fun visit(exprStatement: ExprStatement)
    fun visit(functionNode: FunctionNode)
    fun visit(parameter: Parameter)
    fun visit(declspec: Declspec)
    fun visit(functionParams: FunctionParams)
    fun visit(assignmentDeclarator: AssignmentDeclarator)
    fun visit(rValueDeclarator: RValueDeclarator)
    fun visit(functionDeclarator: FunctionDeclarator)
    fun visit(functionPointerDeclarator: FunctionPointerDeclarator)
    fun visit(functionPointerParamDeclarator: FunctionPointerParamDeclarator)
    fun visit(conditional: Conditional)
    fun visit(memberAccess: MemberAccess)
    fun visit(initializerList: InitializerList)
    fun visit(compoundLiteral: CompoundLiteral)
    fun visit(arrayDeclarator: ArrayDeclarator)
    fun visit(typeName: TypeName)
    fun visit(directFunctionDeclarator: DirectFunctionDeclarator)
    fun visit(directArrayDeclarator: DirectArrayDeclarator)
    fun visit(abstractDeclarator: AbstractDeclarator)
    fun visit(specifierType: DeclarationSpecifier)
    fun visit(programNode: ProgramNode)
    fun visit(functionCall: FunctionCall)
    fun visit(structField: StructField)
    fun visit(structSpecifier: StructSpecifier)
    fun visit(structDeclaration: StructDeclaration)
    fun visit(unionSpecifier: UnionSpecifier)
    fun visit(unionDeclaration: UnionDeclaration)
    fun visit(typeNode: TypeNode)
    fun visit(enumSpecifier: EnumSpecifier)
    fun visit(enumDeclaration: EnumDeclaration)
    fun visit(enumerator: Enumerator)
    fun visit(varNode: VarNode)
    fun visit(arrowMemberAccess: ArrowMemberAccess)
    fun visit(parameterVarArg: ParameterVarArg)
}